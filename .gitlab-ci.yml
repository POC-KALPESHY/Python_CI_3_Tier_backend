stages:
  - test
  - analyze
  - deploy

test:
   stage: test
   image: python:3
   script:
     - pip install pytest-mock
     - pip install requests pytest pytest-cov
     - pytest --cov --cov-report term --cov-report xml:coverage.xml

   coverage: '/TOTAL.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'

   artifacts:
     reports:
       junit: test/test/report.xml
     paths:
       - test/coverage.xml

sonarcloud-analysis:
   stage: analyze
   image:
     name: sonarsource/sonar-scanner-cli:latest
     entrypoint: [""]
   cache:
     key: "${CI_JOB_NAME}"
     paths:
       - .sonar/cache
   script:
     - sonar-scanner -Dsonar.sources=src/,run.py,test/newspaper_test.py, -Dsonar.organization=gitaction-poc7-sonarqube -Dsonar.projectKey=gitaction-poc7-sonarqube_python-ci-3-tier-backend   -Dsonar.python.coverage.reportPaths=coverage.xml

#quality-gate-check:
# stage: analyze  # Moved to the analyze stage
# script:
#   - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$gitaction-poc7-sonarqube_python-ci-3-tier-backend >result.json
#   - cat result.json
#   - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi
# needs:
#   - sonarcloud-analysis

slack_notification:
  stage: deploy
  script:
    - |
      if [ "$CI_JOB_STATUS" == "success" ]; then
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Python Application Deployed Successfully! üöÄ"}' https://hooks.slack.com/services/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
      else
        curl -X POST -H 'Content-type: application/json' --data '{"text":"Failed to deploy Python Application! ‚ùå"}' https://hooks.slack.com/services/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
      fi


